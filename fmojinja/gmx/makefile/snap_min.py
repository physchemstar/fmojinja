from ...mixin import TemplateRendererMixin
from ...__version__ import get_version
from argparse import ArgumentParser
from pathlib import Path


class SnapMin(TemplateRendererMixin):
    """
    for snapshots minimization
    """
    @classmethod
    def template(cls) -> str:
        return f"# Generated by fmojinja version {get_version()}" + """
MD_SETUP = gmx grompp
MD_ENGINE = gmx mdrun# e.g. gmx_mpi -n 8, gmx mdrun -ntmpi 1 -v
PREFIX := {{ prefix }}
PRMTOP := {{ prmtop }}
TRAJIN :={% for path in trajin %} {{ path }}{% endfor %}
TRR := $(addsuffix .trr, $(addprefix $(PREFIX), $(basename $(notdir $(TRAJIN)))))
MDP := {{ mdp }}

.PHONY: gen
gen: $(PREFIX) $(PREFIX)mdp.mdp

$(PREFIX)mdp.mdp:
\tcp $(MDP) $@


$(PREFIX):
\tmkdir $(PREFIX)

.PHONY: run
run: gen $(TRR)

define expr
$(PREFIX)$(basename $(notdir $(1))).trr: $(1)
\techo 0 | gmx trjconv -f $(1) -s {{ tpr }} -o $(PREFIX)$(basename $(notdir $(1))).gro 
\t$(MD_SETUP) \\
\t-f $(PREFIX)mdp.mdp \\
\t-po $(PREFIX)$(basename $(notdir $(1))).mdp \\
\t-o $(PREFIX)$(basename $(notdir $(1))).tpr \\
\t-c $(PREFIX)$(basename $(notdir $(1))).gro \\
\t-r {{ reference }} \\
\t-p {{ prmtop }}
\t$(MD_ENGINE) -deffnm $(PREFIX)$(basename $(notdir $(1)))

endef
$(foreach i, $(TRAJIN), $(eval $(call expr, $(i))))


.PHONY: clean
clean:
\trm $(PREFIX)* 


    """

    @classmethod
    def set_arguments(cls, p: ArgumentParser) -> ArgumentParser:
        p = super(SnapMin, cls).set_arguments(p)
        p.add_argument("-P", "--prefix", default="snapmin/")
        p.add_argument("-p", "--prmtop", type=Path, required=True)
        p.add_argument("-y", "--trajin", type=Path, nargs="+", required=True)
        p.add_argument("-mdp", "--mdp", type=Path, required=True)
        p.add_argument("-tpr", "--tpr", type=Path, required=True)
        p.add_argument("-r", "--reference", type=Path)
        return p